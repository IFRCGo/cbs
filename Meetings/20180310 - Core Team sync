#Core team sync, 04.10.2018  
   
##Participants  
* Alexander  
* Bjørn   
* Jakob  
* Hodo  
* Karoline
* Samson
* Roxanne
* Anine
* Sindre
* Tine
* Ole
* Einar
* Rebecca

## Codeathon feedback
-	Best codeathon so far
-	Surprisingly, people actually got coding faster than before, although we assumed that there wouldn’t be much coding. Could be a more mature code or more mature platform. Bright future for CBS – people much more ready to code!
-	Structure of codeathon was much better
-	Not many improvement points on the logistics of the event
-	Difficult to start coding without having the UI specked properly, but this is to be expected in the way we are organized. 
-	Admin wasn’t looked into properly and thus still needs looking into
-	Confusion in regards to the transfer from angular to react
-	UI framework should have been cleared before codeathon. Frontend frameworks need to be decided before the codeathon. 
-	A lot of great volunteers
-	Fun experience, volunteers got up to speed quickly
-	A lot happened for CBS in the two days
-	The fact that the code wasn’t running on dev before we started was annoying. A lot of stuff to fix in the code before getting started. Build should have been ready before codeathon. Related to pull request merging. Has all been a mess in the few weeks before.
-	Internal issues with dolittle – some things got merged too soon?
-	If the code doesn’t build something is wrong
-	Pleasantly surprised that dolittle wasn’t running around as much (firefighting). Less of this at codeathon 3.0. 
-	Good to be in the same room and good to have less breakout sessions to keep people focused.
-	Lesson learned: quality assurance is needed before codeathon. 
-	People seemed happy.
-	Dolittle was able to nail a few principles about communication and gateway.
-	Great to see many people from Dolittle there
-	Need to document name changes and other agreed upon aspects with admin?
-	Good with the soft start on Thursday and dinner on Friday to build the community
-	Very important that domain experts look at the UI sketches before it is shared with the community. This should be a priority and that there are good feedback loops.
- UI separated for each bounded context?
-	Alexander licence for non profit for ??something??? 

## Desember
-	Too soon, not all are convinced that we will be ready. Not ready for this one with more time to prepare – how will desember go with less time for preparation?
-	December is a crazy month – kids and work
-	Bjørn can’t be there
-	Having babies (Sindre)
-	Less attendees

## Senegal
-	Seems interesting, but not sure if it will be easy in easter with kids
-	Better outside of normal holiday times
-	Clarified from our side mid-november
-	Belgian RC not informed yet
-	Would be smaller, not all bounded contexts

## Evaluation
-	Internal procedures dictate that evaluation is needed
-	Core team to be consulted

## AOB
-	Sync is a bi-weekly thing unless more time is required
-	Only core team can merge, everyone can create issues
-	No change needed within the RC Dev environment in order for the new changes at dolittle to work.
